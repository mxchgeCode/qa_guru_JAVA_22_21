plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation (
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.codeborne:selenide:6.19.1",
            "com.github.javafaker:javafaker:1.0.2",
            "org.junit.jupiter:junit-jupiter:5.10.0",
            'io.qameta.allure:allure-selenide:2.21.0',
            'org.slf4j:slf4j-simple:2.0.9',
            'org.aeonbits.owner:owner:1.0.4'
    )
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}

task check_required_fields(type: Test) {
    useJUnitPlatform {
        includeTags("RequiredFields")
    }
}

task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}

task regress_tests(type: Test) {
    useJUnitPlatform {
        includeTags("Regress")
    }
}

task uiTests(type: Test) {
    useJUnitPlatform {
        includeTags("ui")
    }
}

task apiTests(type: Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}